{"version":3,"sources":["../src/positioning.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmBA,IAAI,YAAY,GAAG,CACjB,mBAAmB,EACnB,qBAAqB,EACrB,iBAAiB,CAClB;;;AAAC,AAGF,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5C,CAAC,CAAC,KAAK,EAAE;;;AAAC,AAGV,CAAC,CAAC,aAAa,EAAE;;;;AAAC,AAIlB,IAAI,GAAG,YAAA;IAAE,IAAI,YAAA;IAAE,IAAI,YAAA;IAAE,GAAG,YAAA;IAAE,KAAK,YAAA;IAC3B,MAAM,YAAA;IAAE,IAAI,YAAA;IAAE,QAAQ,YAAA;;;;AAAC,AAI3B,SAAS,KAAK,GAAG;;;AAGf,KAAG,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC;;;;AAAC,AAIpD,KAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC;;;AAAC,AAGvB,GAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;;;AAAC,AAGvB,KAAG,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1B,KAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC;;;;AAAC,AAIvB,KAAG,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;AAEtB,OAAK,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC9B,OAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,KAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAEpB,UAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpC,UAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC5B,KAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;;AAExB,QAAM,GAAG,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACvC,QAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC;;;;AAAC,AAI1B,KAAG,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;;;AAAC,AAG3B,MAAI,GAAG,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACnC,MAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxB,KAAG,CAAC,SAAS,CAAC,IAAI,CAAC;;;AAAC,AAGpB,GAAC,CAAC,KAAK,GAAG,IAAI,CAAC;CAChB;;;AAAA,AAGD,SAAS,IAAI,GAAG;;;AAGd,KAAG,CAAC,QAAQ,IAAI,IAAI,CAAC;AACrB,OAAK,CAAC,QAAQ,IAAI,IAAI,CAAC;AACvB,UAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC;AAC1B,QAAM,CAAC,QAAQ,IAAI,IAAI,CAAC;AACxB,MAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;CACvB","file":"positioning.js","sourcesContent":["/*\nThis example demonstrates how to use Hexi's sprite positioning methods\nto easily position sprites relative to each other. All these\nmethods follow this same basic format:\n\nspriteA.putTop(spriteB, xOffset, yOffSet)\nspriteA.putBottom(spriteB, xOffset, yOffSet)\nspriteA.putLeft(spriteB, xOffset, yOffSet)\nspriteA.putRight(spriteB, xOffset, yOffSet)\nspriteA.putBottom(spriteB, xOffset, yOffSet)\n\nThese methods save you from having to write a lot of tedious positioning\ncode, and automatically compensate for any possible to change to \neach sprite's x/y anchor point.\nTake a look at this example file to see how to use these very helpful\nmethods in practise.\n*/\n\n//The file you want to load\nlet thingsToLoad = [\n  \"images/rocket.png\",\n  \"images/animals.json\",\n  \"images/star.png\"\n];\n\n//Create a new Hexi instance, and start it.\nlet g = hexi(256, 256, setup, thingsToLoad);\ng.start();\n\n//Scale and align the canvas inside the browser window\ng.scaleToWindow();\n\n//Declare global sprites, objects, and variables\n//that you want to access in all the game functions and states\nlet box, ball, line, cat, tiger, \n    rocket, star, hedgehog;\n\n//A `setup` function that will run only once.\n//Use it for initialization tasks\nfunction setup() {\n\n  //Create a box\n  box = g.rectangle(64, 64, \"seaGreen\", \"hotPink\", 4);\n\n  //Set the box's pivot point to 0.5 so that it rotates around its\n  //center point\n  box.setPivot(0.5, 0.5);\n\n  //Put the box in the center of the stage\n  g.stage.putCenter(box);\n\n  //Create a cat sprite and center its rotation pivot point\n  cat = g.sprite(\"cat.png\");\n  cat.setPivot(0.5, 0.5);\n\n  //Position the cat to the\n  //left of the box, with an additional x offset of -16 pixels\n  box.putLeft(cat, -16);\n\n  tiger = g.sprite(\"tiger.png\");\n  tiger.setPivot(0.5, 0.5);\n  box.putRight(tiger);\n\n  hedgehog = g.sprite(\"hedgehog.png\");\n  hedgehog.setPivot(0.5, 0.5);\n  box.putBottom(hedgehog);\n\n  rocket = g.sprite(\"images/rocket.png\");\n  rocket.setPivot(0.5, 0.5);\n\n  //Position the rocket on top of the box with a y offset of -20\n  //pixels\n  box.putTop(rocket, 0, -20);\n\n  //Create a star and position it in the center of the box\n  star = g.sprite(\"images/star.png\");\n  star.setPivot(0.5, 0.5);\n  box.putCenter(star);\n\n  //Change the game state to `play`\n  g.state = play;  \n}\n\n//The `play` function will run in a loop\nfunction play() {\n\n  //Make the sprites rotate\n  cat.rotation -= 0.01;\n  tiger.rotation -= 0.01;\n  hedgehog.rotation += 0.01;\n  rocket.rotation += 0.01;\n  star.rotation += 0.01;\n}\n"]}