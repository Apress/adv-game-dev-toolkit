{"version":3,"sources":["../src/particleEmitter.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,KAAK,EAAE;;;AAAC,AAGV,CAAC,CAAC,eAAe,GAAG,OAAO,CAAC;AAC5B,CAAC,CAAC,aAAa,EAAE;;;AAAC,AAGlB,SAAS,KAAK,GAAG;;AAEf,MAAI,cAAc,GAAG,CAAC,CAAC,eAAe,CACpC,GAAG;AACH;WAAM,CAAC,CAAC,eAAe;AACrB,KAAC,CAAC,OAAO,CAAC,CAAC,EACX,CAAC,CAAC,OAAO,CAAC,CAAC,EACX;aAAM,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC;KAAA,EACjC,CAAC,CAAC,KAAK,EACP,EAAE,CACH;GAAA,CACF;;;AAAC,AAGF,GAAC,CAAC,OAAO,CAAC,KAAK,GAAG;WAAM,cAAc,CAAC,IAAI,EAAE;GAAA;;;AAAC,AAG9C,GAAC,CAAC,OAAO,CAAC,OAAO,GAAG;WAAM,cAAc,CAAC,IAAI,EAAE;GAAA;;;AAAC,AAGhD,GAAC,CAAC,IAAI,CAAC,8BAA8B,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CACtE","file":"particleEmitter.js","sourcesContent":["/*\nUse the `particleEmitter` method to create a constant stream of particles\nat fixed intervals. The emitter is a simple timer that calls the \n`createParticles` method repeatedly at intervals in milliseconds that\nyou define. Here's how to create a particle emitter\n\nlet particleStream = g.particleEmitter(intervalInMilliseconds, createParticlesMethod);\n\nUse the emitter's `play` and `stop` methods to start and \nstop the particle stream.\n\nThis example shows you how to create a particle emitter, and how to use the \npointer's `press` and `release` methods to start and stop the particle stream.\n*/\n\n//Create a new Hexi instance, and start it.\n//Load the texture atlas that inlcudes the animation frames you want\n//to load\nlet g = hexi(256, 256, setup, [\"images/star.png\"]);\ng.start();\n\n//Set the background color and scale the canvas\ng.backgroundColor = \"black\";\ng.scaleToWindow();\n\n//The `setup` function to initialize your application\nfunction setup() {\n\n  let particleStream = g.particleEmitter(\n    100,                                   //The interval, in milliseconds\n    () => g.createParticles(               //The `createParticles` method\n      g.pointer.x, \n      g.pointer.y, \n      () => g.sprite(\"images/star.png\"),\n      g.stage,\n      50\n    )\n  );\n\n  //Make the emitter create particles when the pointer is pressed\n  g.pointer.press = () => particleStream.play();\n\n  //Stop creating particles when the pointer is released\n  g.pointer.release = () => particleStream.stop();\n\n  //Add text instructions\n  g.text(\"Press and hold to make stars\", \"14px Futura\", \"white\", 6, 4);\n}\n\n\n"]}