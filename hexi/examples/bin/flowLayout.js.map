{"version":3,"sources":["../src/flowLayout.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAaA,IAAI,YAAY,GAAG,CACjB,qBAAqB,CACtB;;;;AAAC;AAIF,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5C,CAAC,CAAC,KAAK,EAAE;;;;AAAC,AAIV,CAAC,CAAC,aAAa,EAAE;;;AAAC,AAGlB,IAAI,GAAG,YAAA;IAAE,KAAK,YAAA;IAAE,QAAQ,YAAA;;;AAAC,AAGzB,SAAS,KAAK,GAAG;;;AAGf,KAAG,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1B,OAAK,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC9B,UAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;;;AAAC,AAGpC,GAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;;;;AAAC,AAIvB,GAAC,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC;;;;;;;;;;;;;;AAAC,CAcvC;;;AAAA,AAGD,SAAS,IAAI,GAAG;;;;CAIf","file":"flowLayout.js","sourcesContent":["/*\nLearn to layout sprites using the `flow` methods. Each\n\nflowRight(padding, spriteOne, spriteTwo, spriteThree, etc);\n\nThe first argument, `padding` is the space, in pixels, that you want to leave\nbetween sprites. After that, just list the sprites you want to\nalign. (You can alternatively supply an array containing sprites, if you want to.)\n\n(Historical note: This feature was taken from the Elm programming language)\n*/\n\n//Create an array of files you want to load\nlet thingsToLoad = [\n  \"images/animals.json\",    //A texture atlas in Texture Packer JSON format\n];\n\n//Create a new Hexi instance, and start it, using the `thingsToLoad`\n//array. \nlet g = hexi(512, 512, setup, thingsToLoad);\ng.start();\n\n//Set the background color and scale the canvas\n//g.backgroundColor = \"black\";\ng.scaleToWindow();\n\n//Declare variables used in more than one function\nlet cat, tiger, hedgehog;\n\n//The `setup` function to initialize your application\nfunction setup() {\n\n  //Create some sprites\n  cat = g.sprite(\"cat.png\");\n  tiger = g.sprite(\"tiger.png\");\n  hedgehog = g.sprite(\"hedgehog.png\");\n\n  //Put the cat in the center of the canvas\n  g.stage.putCenter(cat);\n\n  //Flow the other animals to the right of the\n  //cat, with 10 pixels of padding between them\n  g.flowRight(10, cat, hedgehog, tiger);\n\n  //You can alternatively flow an array containing sprite objects,\n  //like this:\n  //let animals = g.group(cat, tiger, hedgehog);\n  //g.flowRight(10, animals.children);\n\n  //Here's how to use the other flow methods:\n  //g.flowDown(10, cat, hedgehog, tiger);\n  //g.flowLeft(10, cat, hedgehog, tiger);\n  //g.flowUp(10, cat, hedgehog, tiger);\n\n  //Change the game state to `play`\n  //g.state = play;  \n}\n\n//The `play` function will run in a loop\nfunction play() {\n\n  //The play state is not needed in this example\n\n}\n"]}