{"version":3,"sources":["../src/keyboardMovement.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,KAAK,EAAE;;;;AAAC,AAIV,CAAC,CAAC,aAAa,EAAE;;;AAAC,AAGlB,IAAI,GAAG,YAAA;IAAE,OAAO,YAAA;;;AAAC,AAGjB,SAAS,KAAK,GAAG;;;AAGf,KAAG,GAAG,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACjC,GAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;;;;AAAC,AAIvB,GAAC,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AA4DvB,SAAO,GAAG,CAAC,CAAC,IAAI,CACd,oCAAoC,EACpC,aAAa,EAAE,OAAO,EACtB,CAAC,EAAE,CAAC,CACL;;;AAAC,AAGF,GAAC,CAAC,KAAK,GAAG,IAAI,CAAC;CAChB;;;AAAA,AAGD,SAAS,IAAI,GAAG;;;AAGd,GAAC,CAAC,IAAI,CAAC,GAAG,CAAC;;;;;;;;AAAC,AAQZ,GAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;CACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA","file":"keyboardMovement.js","sourcesContent":["/*\nLearn how to move a game character using the keyboard arrow keys\n*/\n\n//Create a new Hexi instance, and start it.\nlet g = hexi(512, 512, setup, [\"images/cat.png\"]);\ng.start();\n\n//Set the background color and scale the canvas\n//g.backgroundColor = \"black\";\ng.scaleToWindow();\n\n//Declare variables used in more than one function\nlet cat, message;\n\n//The `setup` function to initialize your application\nfunction setup() {\n\n  //Create the cat\n  cat = g.sprite(\"images/cat.png\");\n  g.stage.putCenter(cat);\n\n  //Use the `arrowControl` method to update the cat's\n  //velocity at 5 pixels per frame\n  g.arrowControl(cat, 5);\n\n  /*\n  //Alternatively, create some keyboard objects using Hexi's `keyboard` method.\n  //You would usually use this code in the `setup` function\n  let leftArrow = g.keyboard(37),\n    upArrow = g.keyboard(38),\n    rightArrow = g.keyboard(39),\n    downArrow = g.keyboard(40);\n\n  console.log(rightArrow)\n\n  //Here 's how to customize the `press` and `release` methods of   \n  //these new arrow keys: \n\n  //Assign key `press` methods\n  leftArrow.press = () => {\n    //Change the cat's velocity when the key is pressed\n    cat.vx = -5;\n    cat.vy = 0;\n  };\n  leftArrow.release = () => {\n    //If the left arrow has been released, and the right arrow isn't down,\n    //and the cat isn't moving vertically: \n    //Stop the cat\n    if (!rightArrow.isDown && cat.vy === 0) {\n      cat.vx = 0;\n    }\n  };\n  upArrow.press = () => {\n    cat.vy = -5;\n    cat.vx = 0;\n  };\n  upArrow.release = () => {\n    if (!downArrow.isDown && cat.vx === 0) {\n      cat.vy = 0;\n    }\n  };\n  rightArrow.press = () => {\n    cat.vx = 5;\n    cat.vy = 0;\n  };\n  rightArrow.release = () => {\n    if (!leftArrow.isDown && cat.vy === 0) {\n      cat.vx = 0;\n    }\n  };\n  downArrow.press = () => {\n    cat.vy = 5;\n    cat.vx = 0;\n  };\n  downArrow.release = () => {\n    if (!upArrow.isDown && cat.vx === 0) {\n      cat.vy = 0;\n    }\n  };\n  */\n\n\n  //Add the instruction text\n  message = g.text(\n    \"Use the arrow keys to move the cat\",\n    \"18px Futura\", \"black\",\n    6, 6\n  );\n\n  //Change the game state to `play`.\n  g.state = play;\n}\n\n//The `play` function will run in a loop\nfunction play() {\n\n  //Make the cat move\n  g.move(cat);\n\n  //Of course you can also move a sprite the good old-fashioned way if\n  //really want to!\n  //cat.x += cat.vx;\n  //cat.y += cat.vy;\n\n  //Keep the cat contained inside the stage\n  g.contain(cat, g.stage);\n}\n\n/*\n\n//Alternatively, create some keyboard objects using Hexi's `keyboard` method.\n//You would usually use this code in the `setup` function\nlet leftArrow = g.keyboard(37),\n    upArrow = g.keyboard(38),\n    rightArrow = g.keyboard(39),\n    downArrow = g.keyboard(40);\n\nHere's how to customize the `press` and `release` methods of   \nthese new arrow keys: \n\n//Assign key `press` methods\nleftArrow.press = () => {\n  //Change the cat's velocity when the key is pressed\n  cat.vx = -5;\n  cat.vy = 0;\n};\nleftArrow.release = () => {\n  //If the left arrow has been released, and the right arrow isn't down,\n  //and the cat isn't moving vertically: \n  //Stop the cat\n  if (!g.rightArrow.isDown && cat.vy === 0) {\n    cat.vx = 0;\n  }\n};\nupArrow.press = () => {\n  cat.vy = -5;\n  cat.vx = 0;\n};\nupArrow.release = () => {\n  if (!g.downArrow.isDown && cat.vx === 0) {\n    cat.vy = 0;\n  }\n};\nrightArrow.press = () => {\n  cat.vx = 5;\n  cat.vy = 0;\n};\nrightArrow.release = () => {\n  if (!g.leftArrow.isDown && cat.vy === 0) {\n    cat.vx = 0;\n  }\n};\ndownArrow.press = () => {\n  cat.vy = 5;\n  cat.vx = 0;\n};\ndownArrow.release = () => {\n  if (!g.upArrow.isDown && cat.vx === 0) {\n    cat.vy = 0;\n  }\n};\n*/"]}